apiVersion: apps/v1
kind: Deployment
metadata:
  name:  radarr
  namespace: media-server
  labels:
    app:  radarr
spec:
  selector:
    matchLabels:
      app: radarr
  replicas: 1
  template:
    metadata:
      labels:
        app:  radarr
    spec:
      # initContainers:
        # Init containers are exactly like regular containers, except:
          # - Init containers always run to completion.
          # - Each init container must complete successfully before the next one starts.
      containers:
      - name:  radarr
        image: ghcr.io/linuxserver/radarr
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /_status/healthz
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        env:
        - name: PUID
          key: 1000
        - name: PGID
          key: 1000
        - name: TZ
          key: America/Chicago
        ports:
        - containerPort:  7878
          name:  http
        volumeMounts:
        - name: nfs-downloads
          mountPath: /data/downloads
        - name: nfs-appdata
          mountPath: /config
      volumes:
        - name: nfs-downloads
          persistentVolumeClaim:
            claimName: claim-downloads
        - name: nfs-appdata
          persistentVolumeClaim:
            claimName: claim-appdata

      restartPolicy: Always