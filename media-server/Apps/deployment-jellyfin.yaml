
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: media-server
  labels:
    app: jellyfin
spec:
  selector:
    matchLabels:
      app: jellyfin
  replicas: 1
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      containers:
      - name:  jellyfin
        image: ich777/jellyfin
        imagePullPolicy: IfNotPresent
        #securityContext:
          #runAsUser: 1001
        resources:
          requests:
            cpu: 1000m
            memory: 4000Mi
          limits:
            cpu: 2000m
            memory: 6Gi
        livenessProbe:
          httpGet:
            path: /
            port: 32400
          initialDelaySeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 60
        #readinessProbe:
          #httpGet:
            #path: /_status/healthz
            #port: 80
          #initialDelaySeconds: 5
          #timeoutSeconds: 2
          #successThreshold: 1
          #failureThreshold: 3
          #periodSeconds: 10
        ports:
        - containerPort: 8096
          name: http
        volumeMounts:
        - name: pv-shows
          mountPath: /data/shows
        - name: pv-movies
          mountPath: /data/movies
        - name: nfs-appdata
          mountPath: /config
        - name: pv-nvidia
          mountPath: /dev/dri
      volumes:
        - name: pv-movies
          persistentVolumeClaim:
            claimName: pvc-movies
        - name: pv-nvidia
          persistentVolumeClaim:
            claimName: pvc-nvidia
        - name: pv-shows
          persistentVolumeClaim:
            claimName: pvc-shows
        - name: nfs-appdata
          persistentVolumeClaim:
            claimName: claim-appdata-jellyfin
      restartPolicy: Always
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-nvidia
  namespace: media-server
  labels:
    app: pv-nvidia
spec:
  storageClassName: ""
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-nvidia
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Delete
  storageClassName: local-storage
  local:
    path: /dev/dri
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - node1
          - node2
---
#shows

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-shows
  namespace: media-server
spec:
  accessModes:
    - ReadWriteMany 
  storageClassName: ""
  volumeName: pv-shows
  resources:
    requests:
      storage: 10Mi   


---
# Movies
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-movies
  namespace: media-server
spec:
  accessModes:
    - ReadWriteMany 
  storageClassName: ""
  volumeName: pv-movies
  resources:
    requests:
      storage: 10Mi   

---

#appdata

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: claim-appdata-jellyfin
  namespace: media-server
  labels:
    app: jellyfin
  annotations:
    nfs.io/storage-path: "jellyfin"
spec:
  storageClassName: nfs-appdata
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 256Mi


---

#Service


apiVersion: v1
kind: Service
metadata:
  name: jellyfin
  namespace: media-server
spec:
  selector:
    app: jellyfin
  type: LoadBalancer
  ports:
  - name: jellyfin
    port: 6767
    targetPort: 6767
    protocol: TCP