- hosts: all
  tasks:
  # install dependencies
    - name: Install packages
      apt:
        name:
          - curl
          - apt-transport-https
          - vim
          - git
          - wget
          - gnupg2
          - software-properties-common
          - ca-certificates
          - lsb-release

# add google repo

    - name: add google key
      ansible.builtin.apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg 
        state: present

    - name: Add google repo
      ansible.builtin.apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present

# install kubernetes
    - name: install kubernetes
      apt: 
        name: 
          - kubelet
          - kubeadm
          - kubectl
# hold kube packages

    - name: hold kubeadm
      dpkg_selections:
        name: kubeadm
        selection: hold

    - name: hold kubectl
      dpkg_selections:
        name: kubectl
        selection: hold

    - name: hold kubelet
      dpkg_selections:
        name: kubelet
        selection: hold

# Swapp off  

    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

# Modprobe stuff

    - name: modprobe
      command: "modprobe overlay"
      register: result

    - name: netfilter
      command: "modprobe br_netfilter"
      register: result
    
    
    - name: netbridge
      copy:
        content: "net.bridge.bridge-nf-call-ip6tables = 1 \nnet.bridge.bridge-nf-call-iptables = 1 \nnet.ipv4.ip_forward = 1"
        dest: /etc/sysctl.d/kubernetes.conf

# Docker config
    - name: add docker key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add docker repo
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: install docker
      apt:
        name:
          - containerd.io=1.2.13-2
          - docker-ce=5:19.03.11~3-0~ubuntu-focal
          - docker-ce-cli=5:19.03.11~3-0~ubuntu-focal
      notify:
        - docker status


    - name: docker system enable
      command: "mkdir -p /etc/systemd/system/docker.service.d"
      register: result

# cgroups config for docker
    - name: create sh docker daemon on hosts
      copy: src=docker-daemon.sh dest=/tmp/docker-daemon.sh mode=0777

    - name: executing docker daemon script
      command: sh /tmp/docker-daemon.sh

# restarts docker
    - name:
      ansible.builtin.service:
        name: docker
        state: restarted




# Master config and initialization


- hosts: master
  tasks:
    - name: Initialize the Kubernetes cluster using kubeadm
      command: kubeadm init --pod-network-cidr=10.10.0.0/16


    - name: Setup kubeconfig 
      command: "{{ item }}"
      with_items:
       - mkdir -p /root/.kube
       - mkdir -p $HOME/.kube
       - \cp -r /etc/kubernetes/admin.conf /$HOME/.kube/config
       #- chown $(id -u):$(id -g) $HOME/.kube/config

    - name: Install calico pod network
      become: false
      command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

    - name: Generate join command
      command: kubeadm token create --print-join-command
      register: join_command

    - name: Copy join command to local file
      local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

- hosts: nodes
  tasks:
    - name: Copy the join command to server location
      copy: src=join-command dest=/tmp/join-command.sh mode=0777

    - name: Join the node to cluster
      command: sh /tmp/join-command.sh